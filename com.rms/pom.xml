<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.zp</groupId>
	<artifactId>com.rms</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<repositories>
		<repository>
		    <id>nexus-aliyun</id>
		    <name>Nexus aliyun</name>
		    <layout>default</layout>
		    <url>http://maven.aliyun.com/nexus/content/groups/public</url>
		    <snapshots>
		        <enabled>false</enabled>
		    </snapshots>
		    <releases>
		        <enabled>true</enabled>
		    </releases>
		</repository>
	</repositories>
	
	<properties>
		<junit.version>4.12</junit.version>		
		<spring.version>4.2.5.RELEASE</spring.version>
		<druid.version>1.0.26</druid.version>
	
		<mybaitsplus.version>2.0</mybaitsplus.version>
		<velocity.version>1.7</velocity.version>
		
		<jackson.version>2.8.4</jackson.version>
		<fastjson.version>1.2.20</fastjson.version>
		
		<mysql.driver.version>5.0.5</mysql.driver.version>
     	<javaxmail.version>1.5.6</javaxmail.version>

		<quartz.version>2.2.3</quartz.version>
	
		<jdk.version>1.7</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	
	<dependencies>
		<!-- 1.TEST:单元测试框架 begin -->
		<dependency>
			<groupId>junit</groupId>         <!--依赖的group ID -->
			<artifactId>junit</artifactId>   <!--依赖的artifact ID -->
			<version>${junit.version}</version> 	<!--依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。 -->
			<scope>test</scope>			   <!-- 依赖项的适用范围：test，只在测试时使用，用于编译和运行测试代码。不会随项目发布。 -->
		</dependency>
		<!-- TEST end -->
		
		<!-- 2.SPRING相关依赖  begin-->
		<!-- ①.spring核心依赖 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId><!-- 包含Spring框架基本的核心工具类 -->
			<version>${spring.version}</version>
		</dependency>
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-beans</artifactId><!-- springIoC（依赖注入）的基础实现 -->
	        <version>${spring.version}</version>
	    </dependency>
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-context</artifactId><!-- spring 提供在基础 IoC 功能上的扩展服务 -->
	        <version>${spring.version}</version>
	    </dependency>
	    
	    <!-- ②.spring 持久层依赖 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId><!-- 封装了spring对于事物的控制  -->
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId><!-- 包含对Spring对JDBC数据访问进行封装的所有类  -->
			<version>${spring.version}</version>
		</dependency>
		
		<!-- ③.spring web相关依赖 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId><!-- 包含Web应用开发时，用到Spring框架时所需的核心类，包括自动载入 WebApplicationContext 特性的类、Struts与JSF集成类、文件上传的支持类、Filter类和大量工具辅助类 -->
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId><!-- Spring Web MVC是一种基于Java的实现了Web MVC设计模式的请求驱动类型的轻量级Web框架 -->
			<version>${spring.version}</version>
		</dependency>
		
		<!-- ④.spring test依赖-->		
		<dependency>
			<groupId>org.springframework</groupId><!-- 与Junit单元测试、集成测试 -->
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<!-- ⑤.spring 其它依赖 -->
		<dependency>
			<groupId>org.springframework</groupId><!-- spring面向切面编程，提供AOP（面向切面编程） -->
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>	
		<!-- SPRING相关依赖  end-->
		
		<!-- spring 定时:Quartz 时间配置详解 -->
		<dependency>
		    <groupId>org.quartz-scheduler</groupId>
		    <artifactId>quartz</artifactId>
		    <version>${quartz.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.8.10</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.8.10</version>
		</dependency>
		<!-- 3.SERVLET WEB begin -->
		<!-- <dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>j2ee web spec
		    <version>4.0.0-b01</version>
		</dependency> -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId><!-- JSTL标签类 -->
			<version>1.2</version>
		</dependency>
		<!-- google java lib -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId><!-- jackson json:高性能的JSON处理-->
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId><!-- 格式化对象，方便输出日志 -->
			<version>${fastjson.version}</version>
		</dependency>
		<!-- SERVLET WEB end -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId><!-- 导入Mysql数据库驱动包 -->
			<version>${mysql.driver.version}</version>
		</dependency>
		<dependency>
		     <groupId>com.alibaba</groupId>
		     <artifactId>druid</artifactId><!-- connection pool:数据库连接池,用来在spingMVC-mybatis.xml中配置数据库  -->
		     <version>${druid.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>${velocity.version}</version>
		</dependency>
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus</artifactId>
			<version>${mybaitsplus.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.sun.mail</groupId>
		    <artifactId>javax.mail</artifactId>
			<version>${javaxmail.version}</version>
		</dependency>
        <dependency>
			<groupId>com.zp</groupId>
			<artifactId>com.base.common</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
	</dependencies>
</project>